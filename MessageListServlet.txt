package com.ajax.model;

public class Message {
    public int id;
    public String who;
    public String when;
    public String what;

    @Override
    public String toString() {
        return "Message{" +
                "id=" + id +
                ", who='" + who + '\'' +
                ", when='" + when + '\'' +
                ", what='" + what + '\'' +
                '}';
    }
}


package com.ajax.servlet;

import com.ajax.model.Message;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

@WebServlet("/message-list.json")
public class MessageListServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        List<Message> messageList = getMessageList();

        String jsonMessage = buildJSONByJackson(messageList);

        resp.setCharacterEncoding("utf-8");
        resp.setContentType("application/json");

        PrintWriter writer = resp.getWriter();
        writer.println(jsonMessage);
    }

    private String buildJSONByJackson(List<Message> messageList) {
        ObjectMapper mapper = new ObjectMapper();

        try {
            return mapper.writeValueAsString(messageList);
        } catch (JsonProcessingException e) {
            return "";
        }
    }private List<Message> getMessageList() {
        List<Message> messageList = new ArrayList<>();

        Message m1 = new Message();
        m1.id = 1;
        m1.who = "达摩老祖";
        messageList.add(m1);

        Message m2 = new Message();
        m2.id = 2;
        m2.who = "达摩老祖2";
        messageList.add(m2);

        Message m3 = new Message();
        m3.id = 3;
        m3.who = "达摩老祖3";
        messageList.add(m3);

        Message m4 = new Message();
        m4.id = 4;
        m4.who = "达摩老祖4";
        messageList.add(m4);

        return messageList;
    }
}

package com.ajax;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import sun.plugin2.message.Message;

public class Main {
    public static void main(String[] args) throws JsonProcessingException {
        String s ="{\n" +
                "    \"id\": 1,\n" +
                "    \"who\": \"达摩老祖\",\n" +
                "    \"when\": \"2020-12-09 10:34:07\",\n" +
                "    \"what\": \"快去休闲\"\n" +
                "  }";
        ObjectMapper mapper = new ObjectMapper();
        Message message = mapper.readValue(s,Message.class);
        System.out.println(message);
    }
}


html: 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>留言板</title>
</head>
<body>
<table>
    <thead>
    <tr>
        <th>#ID</th>
        <th>谁</th>
        <th>何时</th>
        <th>说了什么</th>
    </tr>
    </thead>
    <tbody>
</table>
<script src="js/jquery-3.5.0.min.js"></script>
<script src="js/message-list.js"></script>

</body>
</html>


js:
$(function () {
    /*
    <tr>
        <td>obj.id</td>
        ...
    </tr>
     */
    setTimeout(function() {
        $.get("message-list.json", function (data) {
            // 怎么遍历 js 的数组
            let tbody = $("tbody");

            for (i in data) {
                let message = data[i];

                // message.id
                // message["id"]   这两个等价
                // message["hello-world"]  message.hello-world
                let html = "<tr>" +
                    "<td>" + message.id + "</td>" +
                    "<td>" + message.who + "</td>" +
                    "<td>" + message.when + "</td>" +
                    "<td>" + message.what + "</td>" +
                    "</tr>";

                tbody.append(html);
            }
        });
    }, 3000);
});



